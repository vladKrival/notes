
// MODEL ‚Äî —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏
const model = {
  notes: [],

  getNotes() {
    return this.notes;
  },
//–¥–æ–±–æ–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–º–µ—Ç–∫—É –≤ –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞
  addNote(title, content, color) {
    const newNote = {
      id: new Date().getTime(),
      title,
      content,
      color,
      isFavorite: false,
    };
    this.notes.unshift(newNote); // –Ω–æ–≤—ã–µ –∑–∞–º–µ—Ç–∫–∏ ‚Äî –≤ –Ω–∞—á–∞–ª–æ
  },
// —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏
  deleteNote(id) {
    this.notes = this.notes.filter((n) => n.id !== id);
  },
// –¥–æ–±–æ–≤–ª—è–µ–º –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏
  toggleFavorite(id) {
    const note = this.notes.find((n) => n.id === id);
    if (note) {
      note.isFavorite === !note.isFavorite;
    }
  },
};


// VIEW ‚Äî –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞

const view = {
  init() {

      // DOM —ç–ª–µ–º–µ–Ω—Ç—ã
    const form = document.querySelector('.note-form');
    const titleInput = document.querySelector('.text');
    const textarea = document.querySelector('.textarea');
    const colorInputs = document.querySelectorAll('input[name="color"]');
    const notesList = document.querySelector('.notes-list');
    const favoriteFilter = document.querySelector('.checkbox-img');
    const countNotes = document.querySelector('.countNotes');
    const messagesBox = document.querySelector('.messege-container');
    const emptyText = document.querySelector('.empty-list');

    // --- —Ñ—É–Ω–∫—Ü–∏—è —Ä–µ–Ω–¥–µ—Ä–∞ ---
    const renderNotes = (notes) => {
      notesList.innerHTML = '';

      if (notes.length === 0) {
        emptyText.textContent =
          '–£ –≤–∞—Å –µ—â—ë –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π –∑–∞–º–µ—Ç–∫–∏. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–ª—è –≤—ã—à–µ –∏ —Å–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ—é –ø–µ—Ä–≤—É—é –∑–∞–º–µ—Ç–∫—É!';
        countNotes.textContent = '–í—Å–µ–≥–æ –∑–∞–º–µ—Ç–æ–∫: 0';
        return;
      }

      emptyText.textContent = '';
      countNotes.textContent = `–í—Å–µ–≥–æ –∑–∞–º–µ—Ç–æ–∫: ${notes.length}`;

      notes.forEach((note) => {
        const li = document.createElement('li');
        li.classList.add('note');
        li.dataset.id = note.id;
        // li.style.backgroundColor = note.color;
        li.style.padding = '16px';
        li.style.borderRadius = '8px';
        li.style.width = '370px';
        li.style.boxShadow = '0 2px 4px rgba(0,0,0,0.1)';
        li.style.display = 'flex';
        li.style.flexDirection = 'column';
        li.style.justifyContent = 'space-between';
        li.style.marginBottom = '16px';

        li.innerHTML = `
          <div class="note-header" style="display:flex; justify-content:space-between; align-items:center;">
            <h3 style="margin:0; font-size:16px;  backgroundColor = ${note.color}">${note.title}</h3>
            <div class="note-actions" style="display:flex; gap:8px;">
              <button class="favorite-note" title="–ò–∑–±—Ä–∞–Ω–Ω–æ–µ" style="background:none; border:none; cursor:pointer; font-size:18px;">
                ${note.isFavorite ? '‚≠ê' : '‚òÜ'}
              </button>
              <button class="delete-note" title="–£–¥–∞–ª–∏—Ç—å" style="background:none; border:none; cursor:pointer; font-size:18px;">üóë</button>
            </div>
          </div>
          <p style="font-size:14px; color:#444; margin-top:8px;">${note.content}</p>
        `;

        notesList.appendChild(li);
      });
    };

    // --- –æ—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã ---
    const clearForm = () => {
      titleInput.value = '';
      textarea.value = '';
      colorInputs[0].checked = true;
    };

    // --- –ø–æ–∫–∞–∑ —Å–æ–æ–±—â–µ–Ω–∏–π ---
    const showMessage = (text, type = 'info') => {
      const msg = document.createElement('div');
      msg.className = `message ${type}`;
      msg.textContent = text;
      messagesBox.appendChild(msg);
      setTimeout(() => msg.remove(), 3000);
    };

    // --- –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π ---

    // –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏
    form.addEventListener('submit', (e) => {
      e.preventDefault();
      const title = titleInput.value.trim();
      const content = textarea.value.trim();
      const color = document.querySelector('input[name="color"]:checked').value;

      if (!title || !content) {
        showMessage('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è', 'error');
        return;
      }

      if (title.length > 50) {
        showMessage('–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞ ‚Äî 50 —Å–∏–º–≤–æ–ª–æ–≤', 'error');
return;
      }

      model.addNote(title, content, color);
      renderNotes(model.getNotes());
      clearForm();
      showMessage('–ó–∞–º–µ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞', 'info');
    });

        // —Ñ–∏–ª—å—Ç—Ä –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö
    favoriteFilter.addEventListener('click', () => {
      const isFiltered = favoriteFilter.classList.toggleFavorite('active');
      const notes = isFiltered ? model.getNotes().filter((n) => n.isFavorite) : model.getNotes();
      renderNotes(notes);
    });

    // —É–¥–∞–ª–µ–Ω–∏–µ –∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
    notesList.addEventListener('click', (e) => {
      const noteEl = e.target.closest('.note');
      if (!noteEl) return;
      const id = +noteEl.dataset.id;

      if (e.target.classList.contains('delete-note')) {
        model.deleteNote(id);
        renderNotes(model.getNotes());
        showMessage('–ó–∞–º–µ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∞', 'info');
      }

      if (e.target.classList.contains('favorite-note')) {
        model.toggleFavorite(id);
        const isFiltered = favoriteFilter.classList.contains('active');
        const notes = isFiltered
          ? model.getNotes().filter((n) => n.isFavorite)
          : model.getNotes();
        renderNotes(notes);
      }
    });



    // --- —ç–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π ---
    this.renderNotes = renderNotes;
    this.showMessage = showMessage;
    this.clearForm = clearForm;
  },
};

// =========================
// CONTROLLER ‚Äî –ª–æ–≥–∏–∫–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è

const controller = {
  init() {
    view.init();
    view.renderNotes(model.getNotes());
  },
};

controller.init();